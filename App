import java.util.NoSuchElementException;
import java.util.Queue;
import java.util.concurrent.ArrayBlockingQueue;

class App2 {

	public static void main(String[] args) {

		Queue<Integer> q1 = new ArrayBlockingQueue<Integer>(5);

		// Trying to read the head of a queue when there is none.

		try {
			System.out.println("Head of queue is: " + q1.element());
		} catch (NoSuchElementException e) {
			System.out.println("Failed to read items from Queue; It is empty.");

		}

		q1.add(10);
		q1.add(20);
		q1.add(30);
		q1.add(40);
		q1.add(50);

		for (Integer value : q1) {
			System.out.println(value);
		}

		// Trying to add items beyond the size of the queue.

		try {
			q1.add(60);
		} catch (IllegalStateException e) {
			System.out.println("Tried to add too many items to the Queue.");
		}

		// Removing and showing removal from queue

		System.out.println("Removed from queue: " + q1.remove());
		System.out.println("Removed from queue: " + q1.remove());
		System.out.println("Removed from queue: " + q1.remove());
		System.out.println("Removed from queue: " + q1.remove());
		System.out.println("Removed from queue: " + q1.remove());

		try {
			System.out.println("Removed from queue: " + q1.remove());
		} catch (NoSuchElementException e) {
			System.out.println("Tried to remove too many items from queue");
		}

		Queue<Integer> q2 = new ArrayBlockingQueue<Integer>(2);

		// Peeking a queue that contains no elements. Returns null.
		System.out.println("Queue 2 peek: " + q2.peek());

		q2.add(15);
		q2.add(20);

		// Successful peek. Returns 15.
		System.out.println("Queue 2 peek: " + q2.peek());

		// Offer attempts to add an item to the tail of the queue.
		// If successful returns true. If unsuccessful returns false.
		if (q2.offer(30) == false) {
			System.out.println("Offer failed to add third item.");
		}

		for (Integer value : q2) {
			System.out.println("Queue 2 value: " + value);
		}
		
		// Poll retrieves and removes the head of this queue, or returns null if this queue is empty.

		System.out.println("Queue 2 poll: " + q2.poll());
		System.out.println("Queue 2 poll: " + q2.poll());
		System.out.println("Queue 2 poll: " + q2.poll());
	}

}
